// This file is autogenerated by build/build-validation.js, do not edit
/* istanbul ignore file */
"use strict";
module.exports = validate10;
module.exports.default = validate10;
const schema11 = {"type":"object","additionalProperties":false,"properties":{"connectionTimeout":{"type":"integer","default":0},"keepAliveTimeout":{"type":"integer","default":72000},"maxRequestsPerSocket":{"type":"integer","default":0,"nullable":true},"bodyLimit":{"type":"integer","default":1048576},"caseSensitive":{"type":"boolean","default":true},"http2":{"type":"boolean"},"https":{"if":{"not":{"oneOf":[{"type":"boolean"},{"type":"null"},{"type":"object","additionalProperties":false,"required":["allowHTTP1"],"properties":{"allowHTTP1":{"type":"boolean"}}}]}},"then":{"setDefaultValue":true}},"ignoreTrailingSlash":{"type":"boolean","default":false},"disableRequestLogging":{"type":"boolean","default":false},"jsonShorthand":{"type":"boolean","default":true},"maxParamLength":{"type":"integer","default":100},"onProtoPoisoning":{"type":"string","default":"error"},"onConstructorPoisoning":{"type":"string","default":"error"},"pluginTimeout":{"type":"integer","default":10000},"requestIdHeader":{"type":"string","default":"request-id"},"requestIdLogLabel":{"type":"string","default":"reqId"},"http2SessionTimeout":{"type":"integer","default":72000},"exposeHeadRoutes":{"type":"boolean","default":true},"versioning":{"type":"object","additionalProperties":true,"required":["storage","deriveVersion"],"properties":{"storage":{},"deriveVersion":{}}},"constraints":{"type":"object","additionalProperties":{"type":"object","required":["name","storage","validate","deriveConstraint"],"additionalProperties":true,"properties":{"name":{"type":"string"},"storage":{},"validate":{},"deriveConstraint":{}}}}}};
const func4 = Object.prototype.hasOwnProperty;

function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
if(data.connectionTimeout === undefined){
data.connectionTimeout = 0;
}
if(data.keepAliveTimeout === undefined){
data.keepAliveTimeout = 72000;
}
if(data.maxRequestsPerSocket === undefined){
data.maxRequestsPerSocket = 0;
}
if(data.bodyLimit === undefined){
data.bodyLimit = 1048576;
}
if(data.caseSensitive === undefined){
data.caseSensitive = true;
}
if(data.ignoreTrailingSlash === undefined){
data.ignoreTrailingSlash = false;
}
if(data.disableRequestLogging === undefined){
data.disableRequestLogging = false;
}
if(data.jsonShorthand === undefined){
data.jsonShorthand = true;
}
if(data.maxParamLength === undefined){
data.maxParamLength = 100;
}
if(data.onProtoPoisoning === undefined){
data.onProtoPoisoning = "error";
}
if(data.onConstructorPoisoning === undefined){
data.onConstructorPoisoning = "error";
}
if(data.pluginTimeout === undefined){
data.pluginTimeout = 10000;
}
if(data.requestIdHeader === undefined){
data.requestIdHeader = "request-id";
}
if(data.requestIdLogLabel === undefined){
data.requestIdLogLabel = "reqId";
}
if(data.http2SessionTimeout === undefined){
data.http2SessionTimeout = 72000;
}
if(data.exposeHeadRoutes === undefined){
data.exposeHeadRoutes = true;
}
const _errs1 = errors;
for(const key0 in data){
if(!(func4.call(schema11.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
let data0 = data.connectionTimeout;
const _errs2 = errors;
if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(!(coerced0 !== undefined)){
if(dataType0 === "boolean" || data0 === null
              || (dataType0 === "string" && data0 && data0 == +data0 && !(data0 % 1))){
coerced0 = +data0;
}
else {
validate10.errors = [{instancePath:instancePath+"/connectionTimeout",schemaPath:"#/properties/connectionTimeout/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["connectionTimeout"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
if(valid0){
let data1 = data.keepAliveTimeout;
const _errs4 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else {
validate10.errors = [{instancePath:instancePath+"/keepAliveTimeout",schemaPath:"#/properties/keepAliveTimeout/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["keepAliveTimeout"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
if(valid0){
let data2 = data.maxRequestsPerSocket;
const _errs6 = errors;
if((!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))) && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate10.errors = [{instancePath:instancePath+"/maxRequestsPerSocket",schemaPath:"#/properties/maxRequestsPerSocket/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["maxRequestsPerSocket"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
if(valid0){
let data3 = data.bodyLimit;
const _errs9 = errors;
if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else {
validate10.errors = [{instancePath:instancePath+"/bodyLimit",schemaPath:"#/properties/bodyLimit/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["bodyLimit"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
if(valid0){
let data4 = data.caseSensitive;
const _errs11 = errors;
if(typeof data4 !== "boolean"){
let coerced4 = undefined;
if(!(coerced4 !== undefined)){
if(data4 === "false" || data4 === 0 || data4 === null){
coerced4 = false;
}
else if(data4 === "true" || data4 === 1){
coerced4 = true;
}
else {
validate10.errors = [{instancePath:instancePath+"/caseSensitive",schemaPath:"#/properties/caseSensitive/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["caseSensitive"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
if(valid0){
if(data.http2 !== undefined){
let data5 = data.http2;
const _errs13 = errors;
if(typeof data5 !== "boolean"){
let coerced5 = undefined;
if(!(coerced5 !== undefined)){
if(data5 === "false" || data5 === 0 || data5 === null){
coerced5 = false;
}
else if(data5 === "true" || data5 === 1){
coerced5 = true;
}
else {
validate10.errors = [{instancePath:instancePath+"/http2",schemaPath:"#/properties/http2/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["http2"] = coerced5;
}
}
}
var valid0 = _errs13 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.https !== undefined){
let data6 = data.https;
const _errs15 = errors;
const _errs16 = errors;
let valid1 = true;
const _errs17 = errors;
const _errs18 = errors;
const _errs19 = errors;
const _errs20 = errors;
let valid3 = false;
let passing0 = null;
const _errs21 = errors;
if(typeof data6 !== "boolean"){
let coerced6 = undefined;
if(!(coerced6 !== undefined)){
if(data6 === "false" || data6 === 0 || data6 === null){
coerced6 = false;
}
else if(data6 === "true" || data6 === 1){
coerced6 = true;
}
else {
const err0 = {};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["https"] = coerced6;
}
}
}
var _valid1 = _errs21 === errors;
if(_valid1){
valid3 = true;
passing0 = 0;
}
const _errs23 = errors;
if(data6 !== null){
let coerced7 = undefined;
if(!(coerced7 !== undefined)){
if(data6 === "" || data6 === 0 || data6 === false){
coerced7 = null;
}
else {
const err1 = {};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced7 !== undefined){
data6 = coerced7;
if(data !== undefined){
data["https"] = coerced7;
}
}
}
var _valid1 = _errs23 === errors;
if(_valid1 && valid3){
valid3 = false;
passing0 = [passing0, 1];
}
else {
if(_valid1){
valid3 = true;
passing0 = 1;
}
const _errs25 = errors;
if(errors === _errs25){
if(data6 && typeof data6 == "object" && !Array.isArray(data6)){
let missing0;
if((data6.allowHTTP1 === undefined) && (missing0 = "allowHTTP1")){
const err2 = {};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
else {
const _errs27 = errors;
for(const key1 in data6){
if(!(key1 === "allowHTTP1")){
delete data6[key1];
}
}
if(_errs27 === errors){
if(data6.allowHTTP1 !== undefined){
let data7 = data6.allowHTTP1;
if(typeof data7 !== "boolean"){
let coerced8 = undefined;
if(!(coerced8 !== undefined)){
if(data7 === "false" || data7 === 0 || data7 === null){
coerced8 = false;
}
else if(data7 === "true" || data7 === 1){
coerced8 = true;
}
else {
const err3 = {};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced8 !== undefined){
data7 = coerced8;
if(data6 !== undefined){
data6["allowHTTP1"] = coerced8;
}
}
}
}
}
}
}
else {
const err4 = {};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
var _valid1 = _errs25 === errors;
if(_valid1 && valid3){
valid3 = false;
passing0 = [passing0, 2];
}
else {
if(_valid1){
valid3 = true;
passing0 = 2;
}
}
}
if(!valid3){
const err5 = {};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
else {
errors = _errs20;
if(vErrors !== null){
if(_errs20){
vErrors.length = _errs20;
}
else {
vErrors = null;
}
}
}
var valid2 = _errs19 === errors;
if(valid2){
const err6 = {};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
else {
errors = _errs18;
if(vErrors !== null){
if(_errs18){
vErrors.length = _errs18;
}
else {
vErrors = null;
}
}
}
var _valid0 = _errs17 === errors;
errors = _errs16;
if(vErrors !== null){
if(_errs16){
vErrors.length = _errs16;
}
else {
vErrors = null;
}
}
if(_valid0){
const _errs30 = errors;
data["https"] = true;
var _valid0 = _errs30 === errors;
valid1 = _valid0;
}
if(!valid1){
const err7 = {instancePath:instancePath+"/https",schemaPath:"#/properties/https/if",keyword:"if",params:{failingKeyword: "then"},message:"must match \"then\" schema"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
validate10.errors = vErrors;
return false;
}
var valid0 = _errs15 === errors;
}
else {
var valid0 = true;
}
if(valid0){
let data8 = data.ignoreTrailingSlash;
const _errs31 = errors;
if(typeof data8 !== "boolean"){
let coerced9 = undefined;
if(!(coerced9 !== undefined)){
if(data8 === "false" || data8 === 0 || data8 === null){
coerced9 = false;
}
else if(data8 === "true" || data8 === 1){
coerced9 = true;
}
else {
validate10.errors = [{instancePath:instancePath+"/ignoreTrailingSlash",schemaPath:"#/properties/ignoreTrailingSlash/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced9 !== undefined){
data8 = coerced9;
if(data !== undefined){
data["ignoreTrailingSlash"] = coerced9;
}
}
}
var valid0 = _errs31 === errors;
if(valid0){
let data9 = data.disableRequestLogging;
const _errs33 = errors;
if(typeof data9 !== "boolean"){
let coerced10 = undefined;
if(!(coerced10 !== undefined)){
if(data9 === "false" || data9 === 0 || data9 === null){
coerced10 = false;
}
else if(data9 === "true" || data9 === 1){
coerced10 = true;
}
else {
validate10.errors = [{instancePath:instancePath+"/disableRequestLogging",schemaPath:"#/properties/disableRequestLogging/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced10 !== undefined){
data9 = coerced10;
if(data !== undefined){
data["disableRequestLogging"] = coerced10;
}
}
}
var valid0 = _errs33 === errors;
if(valid0){
let data10 = data.jsonShorthand;
const _errs35 = errors;
if(typeof data10 !== "boolean"){
let coerced11 = undefined;
if(!(coerced11 !== undefined)){
if(data10 === "false" || data10 === 0 || data10 === null){
coerced11 = false;
}
else if(data10 === "true" || data10 === 1){
coerced11 = true;
}
else {
validate10.errors = [{instancePath:instancePath+"/jsonShorthand",schemaPath:"#/properties/jsonShorthand/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced11 !== undefined){
data10 = coerced11;
if(data !== undefined){
data["jsonShorthand"] = coerced11;
}
}
}
var valid0 = _errs35 === errors;
if(valid0){
let data11 = data.maxParamLength;
const _errs37 = errors;
if(!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))){
let dataType12 = typeof data11;
let coerced12 = undefined;
if(!(coerced12 !== undefined)){
if(dataType12 === "boolean" || data11 === null
              || (dataType12 === "string" && data11 && data11 == +data11 && !(data11 % 1))){
coerced12 = +data11;
}
else {
validate10.errors = [{instancePath:instancePath+"/maxParamLength",schemaPath:"#/properties/maxParamLength/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced12 !== undefined){
data11 = coerced12;
if(data !== undefined){
data["maxParamLength"] = coerced12;
}
}
}
var valid0 = _errs37 === errors;
if(valid0){
let data12 = data.onProtoPoisoning;
const _errs39 = errors;
if(typeof data12 !== "string"){
let dataType13 = typeof data12;
let coerced13 = undefined;
if(!(coerced13 !== undefined)){
if(dataType13 == "number" || dataType13 == "boolean"){
coerced13 = "" + data12;
}
else if(data12 === null){
coerced13 = "";
}
else {
validate10.errors = [{instancePath:instancePath+"/onProtoPoisoning",schemaPath:"#/properties/onProtoPoisoning/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced13 !== undefined){
data12 = coerced13;
if(data !== undefined){
data["onProtoPoisoning"] = coerced13;
}
}
}
var valid0 = _errs39 === errors;
if(valid0){
let data13 = data.onConstructorPoisoning;
const _errs41 = errors;
if(typeof data13 !== "string"){
let dataType14 = typeof data13;
let coerced14 = undefined;
if(!(coerced14 !== undefined)){
if(dataType14 == "number" || dataType14 == "boolean"){
coerced14 = "" + data13;
}
else if(data13 === null){
coerced14 = "";
}
else {
validate10.errors = [{instancePath:instancePath+"/onConstructorPoisoning",schemaPath:"#/properties/onConstructorPoisoning/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced14 !== undefined){
data13 = coerced14;
if(data !== undefined){
data["onConstructorPoisoning"] = coerced14;
}
}
}
var valid0 = _errs41 === errors;
if(valid0){
let data14 = data.pluginTimeout;
const _errs43 = errors;
if(!(((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14)))){
let dataType15 = typeof data14;
let coerced15 = undefined;
if(!(coerced15 !== undefined)){
if(dataType15 === "boolean" || data14 === null
              || (dataType15 === "string" && data14 && data14 == +data14 && !(data14 % 1))){
coerced15 = +data14;
}
else {
validate10.errors = [{instancePath:instancePath+"/pluginTimeout",schemaPath:"#/properties/pluginTimeout/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced15 !== undefined){
data14 = coerced15;
if(data !== undefined){
data["pluginTimeout"] = coerced15;
}
}
}
var valid0 = _errs43 === errors;
if(valid0){
let data15 = data.requestIdHeader;
const _errs45 = errors;
if(typeof data15 !== "string"){
let dataType16 = typeof data15;
let coerced16 = undefined;
if(!(coerced16 !== undefined)){
if(dataType16 == "number" || dataType16 == "boolean"){
coerced16 = "" + data15;
}
else if(data15 === null){
coerced16 = "";
}
else {
validate10.errors = [{instancePath:instancePath+"/requestIdHeader",schemaPath:"#/properties/requestIdHeader/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced16 !== undefined){
data15 = coerced16;
if(data !== undefined){
data["requestIdHeader"] = coerced16;
}
}
}
var valid0 = _errs45 === errors;
if(valid0){
let data16 = data.requestIdLogLabel;
const _errs47 = errors;
if(typeof data16 !== "string"){
let dataType17 = typeof data16;
let coerced17 = undefined;
if(!(coerced17 !== undefined)){
if(dataType17 == "number" || dataType17 == "boolean"){
coerced17 = "" + data16;
}
else if(data16 === null){
coerced17 = "";
}
else {
validate10.errors = [{instancePath:instancePath+"/requestIdLogLabel",schemaPath:"#/properties/requestIdLogLabel/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced17 !== undefined){
data16 = coerced17;
if(data !== undefined){
data["requestIdLogLabel"] = coerced17;
}
}
}
var valid0 = _errs47 === errors;
if(valid0){
let data17 = data.http2SessionTimeout;
const _errs49 = errors;
if(!(((typeof data17 == "number") && (!(data17 % 1) && !isNaN(data17))) && (isFinite(data17)))){
let dataType18 = typeof data17;
let coerced18 = undefined;
if(!(coerced18 !== undefined)){
if(dataType18 === "boolean" || data17 === null
              || (dataType18 === "string" && data17 && data17 == +data17 && !(data17 % 1))){
coerced18 = +data17;
}
else {
validate10.errors = [{instancePath:instancePath+"/http2SessionTimeout",schemaPath:"#/properties/http2SessionTimeout/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced18 !== undefined){
data17 = coerced18;
if(data !== undefined){
data["http2SessionTimeout"] = coerced18;
}
}
}
var valid0 = _errs49 === errors;
if(valid0){
let data18 = data.exposeHeadRoutes;
const _errs51 = errors;
if(typeof data18 !== "boolean"){
let coerced19 = undefined;
if(!(coerced19 !== undefined)){
if(data18 === "false" || data18 === 0 || data18 === null){
coerced19 = false;
}
else if(data18 === "true" || data18 === 1){
coerced19 = true;
}
else {
validate10.errors = [{instancePath:instancePath+"/exposeHeadRoutes",schemaPath:"#/properties/exposeHeadRoutes/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced19 !== undefined){
data18 = coerced19;
if(data !== undefined){
data["exposeHeadRoutes"] = coerced19;
}
}
}
var valid0 = _errs51 === errors;
if(valid0){
if(data.versioning !== undefined){
let data19 = data.versioning;
const _errs53 = errors;
if(errors === _errs53){
if(data19 && typeof data19 == "object" && !Array.isArray(data19)){
let missing1;
if(((data19.storage === undefined) && (missing1 = "storage")) || ((data19.deriveVersion === undefined) && (missing1 = "deriveVersion"))){
validate10.errors = [{instancePath:instancePath+"/versioning",schemaPath:"#/properties/versioning/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];
return false;
}
}
else {
validate10.errors = [{instancePath:instancePath+"/versioning",schemaPath:"#/properties/versioning/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid0 = _errs53 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.constraints !== undefined){
let data20 = data.constraints;
const _errs56 = errors;
if(errors === _errs56){
if(data20 && typeof data20 == "object" && !Array.isArray(data20)){
for(const key2 in data20){
let data21 = data20[key2];
const _errs59 = errors;
if(errors === _errs59){
if(data21 && typeof data21 == "object" && !Array.isArray(data21)){
let missing2;
if(((((data21.name === undefined) && (missing2 = "name")) || ((data21.storage === undefined) && (missing2 = "storage"))) || ((data21.validate === undefined) && (missing2 = "validate"))) || ((data21.deriveConstraint === undefined) && (missing2 = "deriveConstraint"))){
validate10.errors = [{instancePath:instancePath+"/constraints/" + key2.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/properties/constraints/additionalProperties/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];
return false;
}
else {
if(data21.name !== undefined){
let data22 = data21.name;
if(typeof data22 !== "string"){
let dataType20 = typeof data22;
let coerced20 = undefined;
if(!(coerced20 !== undefined)){
if(dataType20 == "number" || dataType20 == "boolean"){
coerced20 = "" + data22;
}
else if(data22 === null){
coerced20 = "";
}
else {
validate10.errors = [{instancePath:instancePath+"/constraints/" + key2.replace(/~/g, "~0").replace(/\//g, "~1")+"/name",schemaPath:"#/properties/constraints/additionalProperties/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced20 !== undefined){
data22 = coerced20;
if(data21 !== undefined){
data21["name"] = coerced20;
}
}
}
}
}
}
else {
validate10.errors = [{instancePath:instancePath+"/constraints/" + key2.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/properties/constraints/additionalProperties/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid5 = _errs59 === errors;
if(!valid5){
break;
}
}
}
else {
validate10.errors = [{instancePath:instancePath+"/constraints",schemaPath:"#/properties/constraints/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid0 = _errs56 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate10.errors = vErrors;
return errors === 0;
}


module.exports.defaultInitOptions = {"connectionTimeout":0,"keepAliveTimeout":72000,"maxRequestsPerSocket":0,"bodyLimit":1048576,"caseSensitive":true,"disableRequestLogging":false,"jsonShorthand":true,"ignoreTrailingSlash":false,"maxParamLength":100,"onProtoPoisoning":"error","onConstructorPoisoning":"error","pluginTimeout":10000,"requestIdHeader":"request-id","requestIdLogLabel":"reqId","http2SessionTimeout":72000,"exposeHeadRoutes":true}
